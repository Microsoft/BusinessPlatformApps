{
  "Install": {
    "Pages": [
      {
        "architectureDiagram": "dist/Apps/Microsoft/Released/Microsoft-SalesforceSalesManagement/Web/Images/salesforceArchitectureDiagram.png",
        "displayname": "Getting Started",
        "list1": [
          "Azure Subscription",
          "Salesforce Subscription",
          "Azure SQL Database",
          "Power BI Desktop (latest version)",
          "Power BI Pro (to share the template with your organization)"
        ],
        "list2": [
          "Full cloud solution with minimum set up and maintenance considerations",
          "Data pulled from Salesforce into an Azure SQL Database using Azure Data Factory",
          "Connect to Azure SQL and import data into Power BI"
        ],
        "name": "$SiteCommon$/pages-gallery/getting-started.html",
        "subtitle": "$translate(INIT_SALESFORCE_SUBTITLE)",
        "templateName": "$translate(INIT_SALESFORCE_TITLE)"
      },
      {
        "displayname": "Azure",
        "name": "$SiteCommon$/pages-gallery/azure-login.html",
        "pricingCalculatorUrl": "$translate(INIT_SALESFORCE_PRICING_CALCULATOR_URL)",
        "pricingCost": "$translate(INIT_SALESFORCE_PRICING_COST)",
        "pricingUrl": "$translate(INIT_SALESFORCE_PRICING_URL)"
      },
      {
        "displayname": "Salesforce",
        "name": "$SiteCommon$/pages-gallery/salesforce-login.html",
        "salesforceObjects": "Opportunity,Account,Lead,Product2,OpportunityLineItem,OpportunityStage,User,UserRole"
      },
      {
        "displayname": "Target",
        "isAzureSql": true,
        "name": "$SiteCommon$/pages-gallery/sql-server.html",
        "newSqlDatabase": "SalesforceDB",
        "showAzureSql": false,
        "showGovAzure": true,
        "showNewSqlOption": true,
        "sqlInstance": "NewSql",
        "subtitle": "Set up a connection to SQL so we can bring in your Salesforce data.",
        "title": "Connect to your SQL Database"
      },
      {
        "displayname": "AAS",
        "name": "$SiteCommon$/pages-gallery/choose-analysis-server.html",
        "showDescription": true,
        "skip": "$dsall(azureSqlDisabled)[0]"
      },
      {
        "displayname": "AAS Login",
        "name": "$SiteCommon$/pages-gallery/ssas.html",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "displayname": "Customize",
        "name": "$SiteCommon$/pages-gallery/customize.html",
        "showEmails": true,
        "showRecurrenceOptions": true,
        "sourceApplication": "Salesforce"
      },
      {
        "displayname": "Summary",
        "name": "$SiteCommon$/pages-gallery/summary.html",
        "values": {
          "Subscription": "$(this.MS.DataStore.getJson(\"SelectedSubscription\").SubscriptionId)",
          "ResourceGroup": "$(this.MS.DataStore.getValue(\"SelectedResourceGroup\"))",
          "SqlServer": "$(this.MS.DataStore.getValue(\"Server\"))",
          "Database": "$(this.MS.DataStore.getValue(\"Database\"))",
          "Fiscal Start": "$(this.MS.DataStore.getValue(\"fiscalMonth\"))",
          "Emails": "$(this.MS.DataStore.getValue(\"EmailAddresses\"))",
          "Actuals": "$(this.MS.DataStore.getValue(\"actuals\"))",
          "Future data load frequency": "$(this.MS.DataStore.getValue(\"postDeploymentPipelineFrequency\"))",
          "Future data load interval": "$(this.MS.DataStore.getValue(\"postDeploymentPipelineInterval\"))"
        }
      },
      {
        "name": "$SiteCommon$/pages-gallery/progress.html",
        "displayname": "Progress",
        "finishedActionName": "Microsoft-ADFSliceStatus",
        "targetSchema": "dbo",
        "filename": "$save('SalesManagementReport.pbix')",
        "showCounts": true,
        "asDatabase": "salesforce",
        "filenameSSAS": "SalesManagementReportAS.pbix",
        "uniqueId": "$save(this.MS.UtilityService.GetUniqueId(10))"
      }
    ],
    "Actions": [
      {
        "name": "Microsoft-DeploySQLScripts",
        "displayname": "Deploying database scripts",
        "SqlServerIndex": "0",
        "SqlScriptsFolder": "Service/Database"
      },
      {
        "name": "Microsoft-SalesforceGetObjectMetadata",
        "displayname": "Retrieving metadata from Salesforce"
      },
      {
        "name": "Microsoft-SalesforceSqlArtefacts",
        "displayname": "Creating tables in database"
      },
      {
        "name": "Microsoft-SetConfigValueInSql",
        "displayname": "Setting configuration",
        "SqlServerIndex": "0",
        "SqlConfigTable": "[smgt].[configuration]"
      },
      {
        "name": "Microsoft-SetConfigValueInSql",
        "displayname": "Setting configuration",
        "SqlServerIndex": "0",
        "SqlConfigTable": "[smgt].[configuration]",
        "SqlGroup": "SolutionTemplate",
        "SqlSubGroup": "SSAS",
        "SqlEntryName": "FunctionName",
        "SqlEntryValue": "$run('asscheduler' + this.MS.DataStore.getValue('uniqueId'))",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureASModel",
        "displayname": "Deploy AS Model",
        "xmlaFilePath": "Service/AzureAS/SalesManagement.xmla",
        "SqlConnectionString": "$dsall(SqlConnectionString)[0]",
        "ASDatabase": "salesforce",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureFunction",
        "displayname": "Deploying scheduler",
        "DeploymentName": "ASFunction",
        "FunctionName": "$save('asscheduler' + this.MS.DataStore.getValue('uniqueId'))",
        "RepoUrl": "https://github.com/MohaaliMicrosoft/AnalysisServicesRefresh",
        "sku": "Standard",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-WaitForArmDeploymentStatus",
        "displayname": "Waiting for scheduler",
        "DeploymentName": "ASFunction",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureFunctionConnectionStrings",
        "displayname": "Setting up scheduler",
        "DeploymentName": "ASFunction",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')",
        "AppSettingKeys": {
          "connStringAS": "$ds(ASConnectionString)",
          "connStringSql": "$dsall(SqlConnectionString)[0]",
          "schema": "[smgt]",
          "databaseAS": "salesforce",
          "functionName": "$run('asscheduler' + this.MS.DataStore.getValue('uniqueId'))"
        }
      },
      {
        "name": "Microsoft-ADFDeployLinkedServices",
        "displayname": "Creating data connections",
        "DeploymentName": "ADFDeployment"
      },
      {
        "name": "Microsoft-ADFDeployDatasets",
        "displayname": "Creating mappings to historical data",
        "DeploymentName": "ADFPreDeploymentDatasets"
      },
      {
        "name": "Microsoft-ADFDeployPipelines",
        "displayname": "Scheduling one time data load for historical data",
        "DeploymentName": "ADFPreDeploymentPipeline"
      },
      {
        "name": "Microsoft-ADFDeployDatasets",
        "displayname": "Creating mappings to future data",
        "DeploymentName": "ADFPostDeploymentDatasets",
        "postDeploymentPipelineType": "PostDeployment"
      },
      {
        "name": "Microsoft-ADFDeployPipelines",
        "displayname": "Scheduling data loads for future data ",
        "DeploymentName": "ADFPostDeploymentPipeline",
        "postDeploymentPipelineType": "PostDeployment"
      },
      {
        "name": "Microsoft-GetDataPullStatus",
        "displayname": "Checking data exists in target",
        "SqlServerIndex": 0,
        "TargetSchema": "dbo",
        "IsWaiting": true,
        "FinishedActionName": "Microsoft-ADFSliceStatus"
      }
    ]
  },
  "Uninstall": {
    "Pages": [
      {
        "name": "$SiteCommon$/pages-gallery/getting-started.html",
        "displayname": "Uninstall Start"
      },
      {
        "name": "$SiteCommon$/pages-gallery/azure-login.html",
        "displayname": " Uninstall Login"
      }
    ],
    "Actions": []
  }
}