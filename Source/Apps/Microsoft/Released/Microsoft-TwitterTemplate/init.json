{
    "Install": {
        "Pages": [
            {
                "architectureDiagram": "dist/Apps/Microsoft/Released/Microsoft-TwitterTemplate/Web/twitterArchitectureDiagram.png",
                "displayname": "Getting Started",
                "list1": [
                    "Azure Subscription",
                    "Power BI Desktop (latest version)",
                    "Power BI Pro (to share the template with your organization)",
                    "Twitter Account"
                ],
                "list2": [
                    "Full cloud solution with minimum set up and maintenance considerations",
                    "Real time data pulled from Twitter & enriched using machine learning",
                    "Connect to Azure SQL and import data into Power BI"
                ],
                "name": "$SiteCommon$/pagesgallery/getting-started.html",
                "subtitle": "Welcome to the brand and campaign management solution template.",
                "templateName": "Brand and Campaign Management for Twitter"
            },
          {
            "displayname": "Login",
            "name": "$SiteCommon$/pagesgallery/azure-login.html",
            "pricingCost": "$run('By clicking next and deploying the template, you authorize Microsoft to create Azure resources on your subscription and bill based on their respective pricing rates. The approximate base cost of the Azure resources used by this template is $6 a day, and every 1,000 tweets will incur an additional cost of approximately $0.8. These costs are estimates only and subject to change.')",
            "pricingUrl": "https://github.com/Microsoft/BusinessPlatformApps/tree/master/Source/Apps/Microsoft/Released/Microsoft-TwitterTemplate#pricing",
            "pricingCalculatorUrl": "https://azure.microsoft.com/en-us/pricing/calculator/"
          },
            {
                "name": "$SiteCommon$/pagesgallery/sql-server.html",
                "displayname": "Source",
                "isAzureSql": true,
                "showAzureSql": false,
                "showNewSqlOption": "true",
                "subtitle": "Set up a connection to SQL so we can bring in your Twitter data.",
                "title": "Connect to your SQL Database",
                "sqlInstance": "NewSql",
                "newSqlDatabase": "twitterDB"
            },
            {
                "name": "$SiteCommon$/pagesgallery/twitter.html",
                "displayname": "Twitter"
            },
            {
                "name": "$SiteCommon$/pagesgallery/search-terms.html",
                "displayname": "Search Terms"
            },
            {
                "name": "$SiteCommon$/pagesgallery/twitter-handles.html",
                "displayname": "Twitter Handles"
            },
            {
                "name": "$SiteCommon$/pagesgallery/summary.html",
                "displayname": "Summary",
                "values": {
                    "Target Server": "$(this.MS.DataStore.getValue('Server'))",
                    "Target Database": "$(this.MS.DataStore.getValue('Database'))",
                    "Target Username": "$(this.MS.DataStore.getValue('Username'))"
                }
            },
            {
                "name": "$SiteCommon$/pagesgallery/progress.html",
                "displayname": "Deploy",
                "uniqueId": "$save(this.MS.UtilityService.GetUniqueId(18))",
                "uniqueIdFunction": "$save(this.MS.UtilityService.GetUniqueId(18))",
                "LogicAppHostingPlan": "$save(this.uniqueId)",
                "LogicAppName": "$save(this.uniqueId)",
                "LogicAppNameHistorical": "$save(this.uniqueId)",
                "SiteName": "$save(this.uniqueIdFunction)",
                "functionAppHostingPlan": "$save(this.uniqueIdFunction)",
                "filename": "$save('TwitterTemplate.pbix')",
                "hasPowerApp": true,
                "powerAppFileName": "TwitterTemplate.msapp"
            }
        ],

        "Actions": [
            {
                "name": "Microsoft-DeploySQLScripts",
                "displayname": "Deploying database scripts",
                "SqlServerIndex": "0",
                "SqlScriptsFolder": "Service/Database/LogicApps"
            },
            {
                "name": "Microsoft-SetConfigValueInSql",
                "displayname": "Deploying database configuration",
                "SqlServerIndex": "0",
                "SqlConfigTable": "[pbist_twitter].[configuration]"
            },
            {
                "displayname": "Deploying Logic App database",
                "name": "Microsoft-ConfigurePowerAppTables"
            },
            {
                "displayname": "Retrieving PowerApp environment",
                "name": "Microsoft-GetPowerAppEnvironment"
            },
            {
                "displayname": "Creating PowerApp SQL connection",
                "name": "Microsoft-CreatePowerAppSqlConnection"
            },
            {
                "name": "Microsoft-DeployTwitterFunction",
                "displayname": "Deploying Twitter function",
                "DeploymentName": "Function"
            },
            {
                "name": "Microsoft-WaitForArmDeploymentStatus",
                "displayname": "Validating Twitter function",
                "DeploymentName": "Function"
            },
            {
                "name": "Microsoft-DeployAzureMLWebServiceFromFile",
                "displayname": "Deploying Azure ML web service",
                "DeploymentName": "AzureML",
                "IsRequestResponse": true,
                "CommitmentPlan": "commitmentplan",
                "WebServiceFile": "Service/AzureArm/SentimentAnalysisWebServiceNew.json",
                "WebServiceName": "$run('SentimentService' + this.MS.DataStore.getValue('uniqueId'))"
            },
            {
                "name": "Microsoft-DeployTwitterCSharpFunctionAssets",
                "displayname": "Deploying Twitter function assets"
            },
            {
                "name": "Microsoft-DeployTwitterHistoricalLogicApp",
                "displayname": "Deploying Twitter logic app",
                "DeploymentName": "LogicApp"
            },
            {
                "name": "Microsoft-WaitForArmDeploymentStatus",
                "displayname": "Validating Logic App",
                "DeploymentName": "LogicApp"
            },
            {
                "name": "Microsoft-CreateConnectorToLogicApp",
                "displayname": "Creating Logic App connector",
                "DeploymentName": "sql",
                "ConnectorName": "sql",
                "ConnectorDisplayName": "SQLConnector",
                "ConnectorPayload": {
                    "authType": "windows",
                    "database": "$ds(Database)",
                    "password": "$ds(Password)",
                    "server": "$ds(Server)",
                    "username": "$ds(Username)"
                }
            },
            {
                "name": "Microsoft-UpdateBlobStorageConnector",
                "displayname": "Updating Logic App connector",
                "DeploymentName": "sql",
                "ConnectorName": "sql",
                "ConnectorDisplayName": "SQLConnector",
                "ConnectorPayload": {
                    "authType": "windows",
                    "database": "$ds(Database)",
                    "password": "$ds(Password)",
                    "server": "$ds(Server)",
                    "username": "$ds(Username)"
                }
            },
            {
                "name": "Microsoft-RunLogicAppHistorical",
                "displayname": "Running Logic App historical",
                "DeploymentName": "LogicApp"
            },
            {
                "name": "Microsoft-DeployTwitterLogicApp",
                "displayname": "Deploying Twitter Logic App",
                "DeploymentName": "LogicApp"
            },
            {
                "name": "Microsoft-WaitForArmDeploymentStatus",
                "displayname": "Validating Twitter Logic App",
                "DeploymentName": "LogicApp"
            }
        ]
    }
}